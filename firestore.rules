rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // User profiles - users can only manage their own profile
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create, update: if request.auth != null 
        && request.auth.uid == userId;
      allow delete: if request.auth != null 
        && request.auth.uid == userId;
    }
    
    // User locations - users can manage their own locations, read others
    match /userLocations/{document} {
      allow read: if request.auth != null;
      allow create: if request.auth != null 
        && request.auth.uid == request.resource.data.userId;
      allow update, delete: if request.auth != null 
        && request.auth.uid == resource.data.userId;
    }
    
    // Legacy locations (for friend locations)
    match /locations/{document} {
      allow read: if request.auth != null;
      allow create: if request.auth != null 
        && request.auth.uid == request.resource.data.userId;
      allow update: if request.auth != null 
        && request.auth.uid == resource.data.userId;
      allow delete: if request.auth != null 
        && request.auth.uid == resource.data.userId;
    }
    
    // Groups - 一時的にルールを緩和（デバッグ用）
    match /groups/{groupId} {
      allow read, write: if request.auth != null;
    }
    
    // Admin check function
    function isAdmin(uid) {
      // 管理者UIDのリスト
      return uid in ['sT6dXIJK5fgBQgnakENYXqKfJHV2', '3j4I6CYJOTdkksSpiDgUkWJrZal2'];
    }
  }
}